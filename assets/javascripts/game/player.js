// Generated by CoffeeScript 1.3.1
var Player;

Player = (function() {

  function Player(game) {
    var _this = this;
    this.game = game;
    this.width = 10;
    this.height = 10;
    this.x = this.game.context_width / 2;
    this.y = this.game.context_height - 20;
    this.colour = '#6f46ff';
    this.accelerationRate = 8;
    this.xAcceleration = 0;
    this.yAcceleration = 0;
    this.upPressed = false;
    this.downPressed = false;
    this.leftPressed = false;
    this.rightPressed = false;
    this.moving = true;
    this.lives = 3;
    $(window).on('keydown', function(e) {
      if (e.which === 38) {
        return _this.upPressed = true;
      } else if (e.which === 40) {
        return _this.downPressed = true;
      } else if (e.which === 39) {
        return _this.rightPressed = true;
      } else if (e.which === 37) {
        return _this.leftPressed = true;
      } else if (e.which === 32) {
        return _this.game.bullets.push(new Bullet(_this.game));
      }
    });
    $(window).on('keyup', function(e) {
      if (e.which === 38) {
        return _this.upPressed = false;
      } else if (e.which === 40) {
        return _this.downPressed = false;
      } else if (e.which === 39) {
        return _this.rightPressed = false;
      } else if (e.which === 37) {
        return _this.leftPressed = false;
      }
    });
    /*
    				
    		@momentumloop = setInterval(()=>
    			@loseMomentum()
    		, @game.fps)
    */

  }

  /*
  	accelerateUp: ()->
  		@yAcceleration = @yAcceleration - @accelerationRate
  		
  	accelerateDown: ()->
  		@yAcceleration = @yAcceleration + @accelerationRate
  		
  	accelerateLeft: ()->
  		@xAcceleration = @xAcceleration - @accelerationRate
  		
  	accelerateRight: ()->
  		@xAcceleration = @xAcceleration + @accelerationRate
  */


  Player.prototype.update = function() {
    if (this.upPressed && (this.y - this.accelerationRate) > (0 - this.accelerationRate)) {
      this.y = this.y - this.accelerationRate;
    }
    if (this.downPressed && (this.y + this.accelerationRate + this.height) <= (this.game.canvas.height + this.accelerationRate)) {
      this.y = this.y + this.accelerationRate;
    }
    if (this.leftPressed && (this.x - this.accelerationRate) >= 0) {
      this.x = this.x - this.accelerationRate;
    }
    if (this.rightPressed && (this.x + this.accelerationRate + this.width) <= this.game.canvas.width) {
      return this.x = this.x + this.accelerationRate;
    }
    /*
    		# MOMENTUM BASED MOVEMENT
    		@accelerateUp() if @upPressed
    		@accelerateDown() if @downPressed
    		@accelerateLeft() if @leftPressed
    		@accelerateRight() if @rightPressed
    		
    		# Make sure you're still within the bounds of the canvas			
    		if ( ( @y + @yAcceleration ) > 0 ) and ( ( @y + @yAcceleration + @height ) < @game.canvas.height )
    			@y = @y + @yAcceleration
    		else
    			@yAcceleration = 0
    		if ( ( @x + @xAcceleration ) > 0 ) and ( ( @x + @xAcceleration + @width ) < @game.canvas.width )
    			@x = @x + @xAcceleration
    		else
    			@xAcceleration = 0
    */

  };

  /*
  
  	loseMomentum: ()->
  		if @yAcceleration > 0
  			@yAcceleration--
  		else if @yAcceleration < 0
  			@yAcceleration++
  		if @xAcceleration > 0
  			@xAcceleration--
  		else if @xAcceleration < 0
  			@xAcceleration++
  */


  Player.prototype.draw = function() {
    return this.game.drawRectangle(this.colour, this.x, this.y, this.width, this.height);
  };

  return Player;

})();
